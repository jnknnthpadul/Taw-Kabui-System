<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        b4myaD+Kx4YkDbqbxoeiO5DBeh0X+4UkjaI6S7QWIraEGhtVa9DWNkY7hySNrrtGnbTQHeBgW06Iu4Qk
        jbpdov4aPDu6gx1c5tyo+aX1nJGkyXSrODa6Ax98JG4bkjTJ6rPBp8bp0R0EmZ/vxhOjnhuSNPlqPdE6
        waH2busOikzfT+N1cb2QpNl1m3hndAdIpuv9ceuQpNn3q+Fs0en7bNTmypKkK/Wg8EI4PV+Mg8LnfJK0
        neogWQfLL0d3MGU8vhR1govJ7JK0juqg+YQ4ObqDK8N1Yjwu7NUnSTvYfaJOnKhNULsDLsPwsXhEeKtT
        khbcneMvwhqjw1GPxZviTiFJWnJ7xiHxhegOyizfaVHLlt04JElb0N3j9XFOdAdqFqcWLqh5m3W2rrc5
        JWkgXfZX4d/HRdEdwFm/ui9rDdenx/VDkjTgbhB1+n2dOFP7ynUHdrbt4qgTWmoXj71DkjTC9o36y/A9
        8ZPoDvisrPw4jo5nxD4hSZpQ14xfiVfEKdG9EMzJSXFUHBB130iSZlLtRFAndNTOFPU513nRvVBMQb0V
        XDut1w4MtdLOjUKSpJ+1W9Sk+9+Lmtv2uRjjlk31Ql63/c+jfpdfjl1DkqQ1t0vcPg6OP4i3xcfjO9G9
        +Gymug11W94aL4tHx7+Lus2SJC2t+otx/3hoPCUOj/pM7f9EnXRzfNRk/W9c6vtxRpwVl72I1X/XZfX/
        Lvu6+p763rqOuq4/jLruJ8eBUT+zfrYkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZKkDbZP3CkOiEfFofGSeE38RfxVfCpOiFPiG5c6Pc6I
        M+NfGbR6jOqxqsfsssevHst6TOuxrce4Hut6zI+IZ0Y9F+o5Uc+Neo5I0ujaM+4eB8VhcVS8M+rgd1Z0
        B0y4sguiXjiPjdfHC+OJ8aC4VewUkrQlXSvuEHVQel3Ugar+xd8dzGDRfhQfi3pxrH9o3Sd+LiRpoe0R
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="Fname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MiddleInitial.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Sname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Uname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="mail.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Contact.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Role.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Birth.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Loc.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="AccountDate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Status.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Fname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MiddleInitial.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Sname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Uname.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="mail.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Contact.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Role.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Birth.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Loc.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="AccountDate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Status.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>